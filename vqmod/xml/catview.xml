<modification>
	<id>Category Extended Features</id>
	<version>1.0.0</version>
	<vqmver>2.4.2</vqmver>
	<author>Nerdherd Developers</author>
<file name="admin/controller/catalog/category.php">
		 <operation error="abort">
			<search position="replace">
				<![CDATA[
						$this->getList();
				       	]]>
			</search>
			<add>
				<![CDATA[		
				$this->getListc();
				]]>
			</add>
		</operation> 
		<operation error="abort">
			<search position="before">
				<![CDATA[
				public function delete() {
				]]>
			</search>
			<add><![CDATA[			
				protected function getListc() {
		
		if (isset($this->request->get['filter_name'])) {
			$filter_name = $this->request->get['filter_name'];
		} else {
			$filter_name = null;
		}
		
		if (isset($this->request->get['filter_id'])) {
			$filter_id = $this->request->get['filter_id'];
		} else {
			$filter_id = null;
		}
		
		if (isset($this->request->get['filter_view'])) {
			$filter_view = $this->request->get['filter_view'];
		} else {
			$filter_view = null;
		}
		
		if (isset($this->request->get['sort'])) {
			$sort = $this->request->get['sort'];
		} else {
			$sort = 'name';
		}

		if (isset($this->request->get['order'])) {
			$order = $this->request->get['order'];
		} else {
			$order = 'ASC';
		}

		if (isset($this->request->get['page'])) {
			$page = $this->request->get['page'];
		} else {
			$page = 1;
		}

		$url = '';

		if (isset($this->request->get['filter_name'])) {
			$url .= '&filter_name=' . urlencode(html_entity_decode($this->request->get['filter_name'], ENT_QUOTES, 'UTF-8'));
		}
		
		if (isset($this->request->get['filter_id'])) {
			$url .= '&filter_id=' . urlencode(html_entity_decode($this->request->get['filter_id'], ENT_QUOTES, 'UTF-8'));
		}
		
		if (isset($this->request->get['filter_view'])) {
			$url .= '&filter_view=' . urlencode(html_entity_decode($this->request->get['filter_view'], ENT_QUOTES, 'UTF-8'));
		}
		
		if (isset($this->request->get['sort'])) {
			$url .= '&sort=' . $this->request->get['sort'];
		}

		if (isset($this->request->get['order'])) {
			$url .= '&order=' . $this->request->get['order'];
		}

		if (isset($this->request->get['page'])) {
			$url .= '&page=' . $this->request->get['page'];
		}

		$data['breadcrumbs'] = array();

		$data['breadcrumbs'][] = array(
			'text' => $this->language->get('text_home'),
			'href' => $this->url->link('common/dashboard', 'token=' . $this->session->data['token'], true)
		);

		$data['breadcrumbs'][] = array(
			'text' => $this->language->get('heading_title'),
			'href' => $this->url->link('catalog/category', 'token=' . $this->session->data['token'] . $url, true)
		);

		$data['add'] = $this->url->link('catalog/category/add', 'token=' . $this->session->data['token'] . $url, true);
		$data['delete'] = $this->url->link('catalog/category/delete', 'token=' . $this->session->data['token'] . $url, true);
		$data['repair'] = $this->url->link('catalog/category/repair', 'token=' . $this->session->data['token'] . $url, true);

		$data['categories'] = array();

		$filter_data = array(
			'filter_name'	  => $filter_name,
			'filter_id'	  	  => $filter_id,
			'filter_view'	  => $filter_view,
			'sort'  => $sort,
			'order' => $order,
			'start' => ($page - 1) * $this->config->get('config_limit_admin'),
			'limit' => $this->config->get('config_limit_admin')
		);

		$category_total = $this->model_catalog_category->getTotalCategories($filter_data);

		$results = $this->model_catalog_category->getCategories($filter_data);

		foreach ($results as $result) {
			
			$action = array();
			
			$action[] = array(
					'text' => $this->language->get('text_edit'),
					'href' => $this->url->link('catalog/category/repair', 'token=' . $this->session->data['token'] . '&category_id=' . $result['category_id'] . $url, true)
			);
			
			$data['categories'][] = array(
				'category_id' => $result['category_id'],
				'status'      => $result['status'],
				'name'        => $result['name'],
				'views'        => $result['views'],
				'sort_order'  => $result['sort_order'],
				'selected'    => isset($this->request->post['selected']) && in_array($result['category_id'], $this->request->post['selected']),
				'action'      => $action,	
				'edit'        => $this->url->link('catalog/category/edit', 'token=' . $this->session->data['token'] . '&category_id=' . $result['category_id'] . $url, true),
				'delete'      => $this->url->link('catalog/category/delete', 'token=' . $this->session->data['token'] . '&category_id=' . $result['category_id'] . $url, true)
			);
		}

		$data['heading_title'] = $this->language->get('heading_title');

		$data['text_list'] = $this->language->get('text_list');
		$data['text_no_results'] = $this->language->get('text_no_results');
		$data['text_confirm'] = $this->language->get('text_confirm');

		$data['column_name'] = $this->language->get('column_name');
		$data['column_views'] = $this->language->get('column_views');
		$data['column_id'] = $this->language->get('column_id');
		$data['button_filter'] = $this->language->get('button_filter');
		$data['token'] = $this->session->data['token'];
		$data['column_sort_order'] = $this->language->get('column_sort_order');
		$data['column_action'] = $this->language->get('column_action');

		$data['text_enabled'] = $this->language->get('text_enabled');
		$data['text_disabled'] = $this->language->get('text_disabled');
		$data['entry_details'] = $this->language->get('entry_details');
		$data['column_status'] = $this->language->get('column_status');
		
		$data['button_add'] = $this->language->get('button_add');
		$data['button_edit'] = $this->language->get('button_edit');
		$data['button_delete'] = $this->language->get('button_delete');
		$data['button_rebuild'] = $this->language->get('button_rebuild');

		if (isset($this->error['warning'])) {
			$data['error_warning'] = $this->error['warning'];
		} else {
			$data['error_warning'] = '';
		}

		if (isset($this->session->data['success'])) {
			$data['success'] = $this->session->data['success'];

			unset($this->session->data['success']);
		} else {
			$data['success'] = '';
		}

		if (isset($this->request->post['selected'])) {
			$data['selected'] = (array)$this->request->post['selected'];
		} else {
			$data['selected'] = array();
		}

		$url = '';
		
		if (isset($this->request->get['filter_name'])) {
			$url .= '&filter_name=' . urlencode(html_entity_decode($this->request->get['filter_name'], ENT_QUOTES, 'UTF-8'));
		}
		
		if (isset($this->request->get['filter_id'])) {
			$url .= '&filter_id=' . urlencode(html_entity_decode($this->request->get['filter_id'], ENT_QUOTES, 'UTF-8'));
		}

		if ($order == 'ASC') {
			$url .= '&order=DESC';
		} else {
			$url .= '&order=ASC';
		}

		if (isset($this->request->get['page'])) {
			$url .= '&page=' . $this->request->get['page'];
		}

		$data['sort_name'] = $this->url->link('catalog/category', 'token=' . $this->session->data['token'] . '&sort=name' . $url, true);
		$data['sort_sort_order'] = $this->url->link('catalog/category', 'token=' . $this->session->data['token'] . '&sort=sort_order' . $url, true);

		$data['url'] = $url;
		
		$url = '';

		if (isset($this->request->get['sort'])) {
			$url .= '&sort=' . $this->request->get['sort'];
		}

		if (isset($this->request->get['order'])) {
			$url .= '&order=' . $this->request->get['order'];
		}

		$pagination = new Pagination();
		$pagination->total = $category_total;
		$pagination->page = $page;
		$pagination->limit = $this->config->get('config_limit_admin');
		$pagination->text = $this->language->get('text_pagination');
		$pagination->url = $this->url->link('catalog/category', 'token=' . $this->session->data['token'] . $url . '&page={page}', true);

		$data['pagination'] = $pagination->render();
		$data['results'] = sprintf($this->language->get('text_pagination'), ($category_total) ? (($page - 1) * $this->config->get('config_limit_admin')) + 1 : 0, ((($page - 1) * $this->config->get('config_limit_admin')) > ($category_total - $this->config->get('config_limit_admin'))) ? $category_total : ((($page - 1) * $this->config->get('config_limit_admin')) + $this->config->get('config_limit_admin')), $category_total, ceil($category_total / $this->config->get('config_limit_admin')));
		
		$data['filter_name'] = $filter_name;
		$data['filter_id'] = $filter_id;
		$data['filter_view'] = $filter_view;
		$data['token'] = $this->session->data['token'];

		$data['sort'] = $sort;
		$data['order'] = $order;

		$data['header'] = $this->load->controller('common/header');
		$data['column_left'] = $this->load->controller('common/column_left');
		$data['footer'] = $this->load->controller('common/footer');

		$this->response->setOutput($this->load->view('catalog/category_listc', $data));
	}

public function getproducts() {
		$url = '';
		
		if (isset($this->request->get['filter_name'])) {
			$url .= '&filter_name=' . urlencode(html_entity_decode($this->request->get['filter_name'], ENT_QUOTES, 'UTF-8'));
		}
		
		if (isset($this->request->get['filter_id'])) {
			$url .= '&filter_id=' . urlencode(html_entity_decode($this->request->get['filter_id'], ENT_QUOTES, 'UTF-8'));
		}
		
		if (isset($this->request->get['page'])) {
			$url .= '&page=' . $this->request->get['page'];
		}

		$id = $this->request->get['id'];
		$this->load->model('catalog/category');
		$this->load->model('tool/image');
		$results = array();
		$results = $this->model_catalog_category->getpro($id);
		foreach ($results as $key => $value) {
			if ($value['image'] && file_exists(DIR_IMAGE . $value['image'])) {
				$image = $this->model_tool_image->resize($value['image'], 50, 50);
			} else {
				$image = $this->model_tool_image->resize('no_image.jpg', 50, 50);
			}
			$results[$key]['thumb'] = $image;
			$results[$key]['href'] = $this->url->link('catalog/product/edit', 'token=' . $this->session->data['token'] . '&product_id=' . $value['product_id'] . $url, true);
		}
		if (!empty($results)) {
			$results['countp'] = count($results);
			$results['action'] =  $this->url->link('catalog/category/updatePro', 'token=' . $this->session->data['token'].$url, true);
			$results['count'] = $this->model_catalog_category->getcountc($id);
			$results['cats'] = $this->model_catalog_category->subcatc($id);
		}
		$this->response->setOutput(json_encode($results));
	}

	public function updatePro() {
		$url = '';
		
		if (isset($this->request->get['filter_name'])) {
			$url .= '&filter_name=' . urlencode(html_entity_decode($this->request->get['filter_name'], ENT_QUOTES, 'UTF-8'));
		}
		
		if (isset($this->request->get['filter_id'])) {
			$url .= '&filter_id=' . urlencode(html_entity_decode($this->request->get['filter_id'], ENT_QUOTES, 'UTF-8'));
		}
		
		if (isset($this->request->get['page'])) {
			$url .= '&page=' . $this->request->get['page'];
		}
		
		$data = $this->request->post;
		$this->load->model('catalog/category');
		$this->model_catalog_category->updateproducts($data);
		$this->session->data['success'] = 'Product has been updated in database successfully.';
		$this->response->redirect($this->url->link('catalog/category', 'token=' . $this->session->data['token'] . $url, true));
	}
	public function setstatus() {
		$data = $this->request->get;
		$this->load->model('catalog/category');
		$this->model_catalog_category->setStatus($data);
	}
				]]>
			</add>
		</operation>
	</file>
	<file name="catalog/model/catalog/category.php">
		<operation error="log">
			<search position="after"><![CDATA[getCategory($category_id) {]]>
			</search>
			<add><![CDATA[$this->db->query("UPDATE " . DB_PREFIX . "category SET views = views +1  WHERE category_id = '".(int)$category_id."'");]]></add>
		</operation>
	</file>
	<file name="admin/language/*/catalog/category.php">
		<operation error="abort">
			<search position="before"><![CDATA[
				$_['column_name']
				]]>
			</search>
			<add>
				<![CDATA[
				$_['column_id']               = 'Category Id';
				$_['entry_details']          = 'View Details';
				$_['column_status']           = 'Status';
				$_['text_disabled']           = 'Disabled';
				$_['text_enabled']            = 'Enabled';
				$_['column_views']            = 'Views';
				]]>
			</add>
		</operation>
	</file>
	<file name="admin/model/catalog/category.php">
		<operation error="abort">
			<search position="before"><![CDATA[
				$sql .= " GROUP BY cp.category_id";
				]]>
			</search>
			<add><![CDATA[
				if (!empty($data['filter_id'])) {
			$sql .= " AND cp.category_id LIKE '" . (int)$this->db->escape($data['filter_id']) . "%'";
		}
			if (!empty($data['filter_view'])) {
			$sql .= " AND c1.views = '" . (int)$this->db->escape($data['filter_view']) . "'";
		}
				]]>
			</add>
		</operation>
		<operation error="log">
			<search position="iafter"><![CDATA[AS name,]]>
			</search>
			<add><![CDATA[c1.views,]]>
			</add>
		</operation>
		<operation error="log">
			<search position="after"><![CDATA[public function getCategories($data = array()) {]]>
			</search>
			<add><![CDATA[ 
        $sql = "SHOW COLUMNS FROM `" . DB_PREFIX . "category` LIKE  'views'";
	    $result = $this->db->query($sql)->num_rows;
	       if(!$result) {
	      	$this->db->query("ALTER TABLE  `". DB_PREFIX ."category` ADD  `views`  text NOT NULL AFTER  `parent_id`");
	    }]]>
			</add>
		</operation>
		<operation error="abort">
			<search position="after"><![CDATA[
				$query = $this->db->query($sql); 
				]]>
			</search>
			<add><![CDATA[          
				foreach ($query->rows as $key => $value) {
			$query1 = $this->db->query("SELECT status FROM " . DB_PREFIX . "category WHERE category_id = '" . (int)$value['category_id'] . "'");
			$query->rows[$key]['status'] = $query1->row['status'];
		}
				]]>
			</add>
		</operation>
		<operation error="abort">
			<search position="replace"><![CDATA[
				$query = $this->db->query("SELECT COUNT(*) AS total FROM " . DB_PREFIX . "category");
				]]>
			</search>
			<add><![CDATA[          
				$sql = "SELECT COUNT(*) AS total FROM " . DB_PREFIX . "category c LEFT JOIN " . DB_PREFIX . "category_description cd ON (c.category_id = cd.category_id)";
		
		$sql .= " WHERE cd.language_id = '" . (int)$this->config->get('config_language_id') . "'";

		if (!empty($data['filter_name'])) {
			$sql .= " AND LOWER(cd.name) LIKE '" . $this->db->escape(strtolower($data['filter_name'])) . "%'";
		}

		if (!empty($data['filter_id'])) {
			$sql .= " AND cd.category_id LIKE '" . (int)$this->db->escape($data['filter_id']) . "%'";
		}

		if (!empty($data['filter_view'])) {
			$sql .= " AND c.views = '" . (int)$this->db->escape($data['filter_view']) . "%'";
		}

		$query = $this->db->query($sql);
				]]>
			</add>
		</operation>
		<operation error="abort">
			<search position="replace"><![CDATA[
				public function getTotalCategories() {
				]]>
			</search>
			<add><![CDATA[          
				public function getTotalCategories($data) {
				]]>
			</add>
		</operation>
		<operation error="abort">
			<search position="before"><![CDATA[
				public function getTotalCategoriesByLayoutId($layout_id) {
				]]>
			</search>
			<add><![CDATA[          
	public function getpro($id) {
		
		$query = $this->db->query("SELECT p.product_id,p.model,p.quantity,p.image,p.price,p.status,pd.name,(SELECT price FROM " . DB_PREFIX . "product_special ps WHERE p.product_id = ps.product_id ORDER BY ps.priority, ps.price LIMIT 1) AS special FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id) LEFT JOIN " . DB_PREFIX . "product_to_category p2c ON (p.product_id = p2c.product_id) WHERE pd.language_id = '" . (int)$this->config->get('config_language_id') . "' AND p2c.category_id = '" . (int)$id . "' ORDER BY pd.name ASC");
								  
		return $query->rows;
	
	}
	public function getcountc($id){
		$query = $this->db->query("SELECT COUNT(c.category_id) AS count FROM " . DB_PREFIX . "category c WHERE c.parent_id = '" . (int)$id . "'");
		
		return $query->row['count'];
	}

	public function subcatc($id){
		$query = $this->db->query("SELECT c.category_id,cd.name FROM " . DB_PREFIX . "category c LEFT JOIN " . DB_PREFIX . "category_description cd ON (c.category_id = cd.category_id) WHERE c.parent_id = '" . (int)$id . "' AND cd.language_id = '" . (int)$this->config->get('config_language_id') . "'");
		
		return $query->rows;
	}

	public function setStatus($data) {
			$this->db->query("UPDATE " . DB_PREFIX . "category SET status = '" . (int)$data['value'] . "' WHERE category_id = '".(int)$data['id']."'");
	}

	public function updateproducts($data) {
		
		foreach ($data['content'] as $key => $value) {
			$this->db->query("UPDATE " . DB_PREFIX . "product SET quantity = '" . (int)$value['quantity'] . "',price = '".(float)$value['price']."', status = '".(int)$value['status']."',model = '" . $this->db->escape($value['model']) . "' WHERE product_id = '".(int)$key."'");

			$this->db->query("UPDATE " . DB_PREFIX . "product_description SET name = '" . $this->db->escape($value['name']) . "' WHERE product_id = '".(int)$key."' AND language_id = '" . (int)$this->config->get('config_language_id') . "'");
			if(isset($value['special'])){
				$this->db->query("UPDATE " . DB_PREFIX . "product_special SET price = '" . (float)$value['special'] . "' WHERE product_id = '".(int)$key."' ORDER BY priority, price LIMIT 1");
			}		
}	  
	}

				]]>
			</add>
		</operation>
	</file>
	<file name="admin/view/template/catalog/category_listc.tpl">
		<operation error="skip">
			<search position="after"><![CDATA[</table></form>]]></search>
			<add><![CDATA[<div class="others"><i>Best Sellers : </i><a href="http://www.opencart.com/index.php?route=extension/extension/info&extension_id=7540" target="_blank" title="All in one seo for opencart">All in one seo for opencart</a><a href="http://www.opencart.com/index.php?route=extension/extension/info&extension_id=13677" target="_blank" title="Multi Purpose Poupup Module">Multi Purpose Popup Module</a><a href="http://www.opencart.com/index.php?route=extension/extension/info&extension_id=15098" target="_blank" title="Customer all in one feedback">Customer all in one feedback</a></div>]]></add>
		</operation>
	</file>
</modification>