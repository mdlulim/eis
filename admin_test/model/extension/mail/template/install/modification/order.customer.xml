<file path="catalog/model/checkout/order.php" email_template="order.customer">
	<operation>
		<search index="0"><![CDATA[public function addOrderHistory(]]></search>
		<add position="after"><![CDATA[		// Decode twice from javascript encodeURIComponent and curl API http_build_query
		$comment = html_entity_decode(html_entity_decode($comment, ENT_QUOTES, 'UTF-8'), ENT_QUOTES, 'UTF-8');
		]]></add>
	</operation>
	<operation>
		<search index="0"><![CDATA[$subject = sprintf($language->get('text_new_subject'),]]></search>
		<add position="after"><![CDATA[
				$this->load->model('tool/image');
				$this->load->model('catalog/product');
				$this->load->model('extension/mail/template');

				$template_load = array(
					'key' => 'order.customer'
				);

				if (!empty($order_status_id)) {
					$template_load['order_status_id'] = $order_status_id;
				}

				if (!empty($order_info['payment_method'])) {
					$template_load['payment_method'] = $order_info['payment_method'];
				}

				if (!empty($order_info['language_id'])) {
					$template_load['language_id'] = $order_info['language_id'];
				}

				if (!empty($order_info['customer_id'])) {
					$template_load['customer_id'] = $order_info['customer_id'];
				}

				if (!empty($order_info['customer_group_id'])) {
					$template_load['customer_group_id'] = $order_info['customer_group_id'];
				}

				$template = $this->model_extension_mail_template->load($template_load);

				$language->load('mail/order');

				$template->data['text_affiliate'] = $language->get('text_affiliate');
				$template->data['text_customer_group'] = $language->get('text_customer_group');
				$template->data['text_id'] = $language->get('text_id');
				$template->data['text_order_link'] = $language->get('text_order_link');
				$template->data['text_invoice_no'] = $language->get('text_invoice_no');

				$template_data = array();

				if (!empty($order_info['customer_group_id'])) {
	            	$this->load->model('account/customer_group');

					$customer_group_info = $this->model_account_customer_group->getCustomerGroup($order_info['customer_group_id']);

					if ($customer_group_info) {
						$template->data['customer_group'] = $customer_group_info;
					}
	            }

				if (!empty($order_info['affiliate_id'])) {
	            	$this->load->model('affiliate/affiliate');

					$affiliate_info = $this->model_affiliate_affiliate->getAffiliate($order_info['affiliate_id']);

					if ($affiliate_info) {
						$template->data['affiliate'] = $affiliate_info;
					}
	            }

				// Custom fields
				if (!empty($order_info['custom_field']) || !empty($order_info['payment_custom_field'])) {
					$this->load->model('account/custom_field');

					if (!empty($order_info['customer_group_id'])) {
						$customer_group_id = $order_info['customer_group_id'];
					} else {
						$customer_group_id = $this->config->get('config_customer_group_id');
					}

					$custom_fields = $this->model_account_custom_field->getCustomFields($customer_group_id);

					foreach($custom_fields as $custom_field){
						if (isset($order_info['payment_custom_field'][$custom_field['custom_field_id']])) {
							$template->data['custom_field_' . $custom_field['custom_field_id'] . '_name'] = $custom_field['name'];
							$template->data['custom_field_' . $custom_field['custom_field_id'] . '_value'] = $order_info['payment_custom_field'][$custom_field['custom_field_id']];
						} elseif (isset($order_info['custom_field'][$custom_field['custom_field_id']])) {
							$template->data['custom_field_' . $custom_field['custom_field_id'] . '_name'] = $custom_field['name'];
							$template->data['custom_field_' . $custom_field['custom_field_id'] . '_value'] = $order_info['custom_field'][$custom_field['custom_field_id']];
						}
					}
				}

				$template->data['order_subject_products'] = '';

				foreach ($order_product_query->rows as $order_product) {
					$template->data['order_subject_products'] .= ($template->data['order_subject_products'] ? ', ' : '') . $order_product['name'];
				}

				$length = 32;

    			if (strlen($template->data['order_subject_products']) > $length) {
    				$template->data['order_subject_products'] = substr($template->data['order_subject_products'], 0, strrpos(substr($template->data['order_subject_products'], 0, $length), ' ')) . '...';
				}

				$template->data['new_order_status'] = $order_status;]]></add>
	</operation>
	<operation>
		<search><![CDATA[$text .= $comment]]></search>
		<add position="replace" trim="true"><![CDATA[$text .= strip_tags($comment)]]></add>
	</operation>
	<operation>
		<search index="0"><![CDATA[$this->db->query("INSERT INTO " . DB_PREFIX . "order_history SET]]></search>
		<ignoreif><![CDATA[$order_history_id = $this->db->getLastId();]]></ignoreif>
		<add position="after"><![CDATA[
            $order_history_id = $this->db->getLastId();]]></add>
	</operation>
	<operation info="Duplicated in order.admin" error="skip">
		<search index="0"><![CDATA[$order_option_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "order_option WHERE order_id = '" . (int)$order_id . "' AND order_product_id = '" . (int)$product['order_product_id'] . "'");]]></search>
		<ignoreif><![CDATA[$order_option_query = $this->db->query("SELECT oo.*, pov.* FROM " . DB_PREFIX . "order_option oo LEFT JOIN " . DB_PREFIX . "product_option_value pov ON (pov.product_option_value_id = oo.product_option_value_id) WHERE oo.order_id = '" . (int)$order_id . "' AND oo.order_product_id = '" . (int)$product['order_product_id'] . "'");]]></ignoreif>
		<add position="replace"><![CDATA[$product_data = $this->model_catalog_product->getProduct($product['product_id']);
		
		$order_option_query = $this->db->query("SELECT oo.*, pov.*, ov.image FROM " . DB_PREFIX . "order_option oo LEFT JOIN " . DB_PREFIX . "product_option_value pov ON (pov.product_option_value_id = oo.product_option_value_id) LEFT JOIN " . DB_PREFIX . "option_value ov ON (ov.option_value_id = pov.option_value_id) WHERE oo.order_id = '" . (int)$order_id . "' AND oo.order_product_id = '" . (int)$product['order_product_id'] . "'");]]></add>
	</operation>
	<operation info="Duplicated in order.admin" error="skip">
		<search index="0"><![CDATA['value' => (utf8_strlen($value) > 20 ? utf8_substr($value, 0, 20) . '..' : $value)]]></search>
		<ignoreif><![CDATA['value' => (utf8_strlen($value) > 120 ? utf8_substr($value, 0, 120) . '..' : $value),]]></ignoreif>
		<add position="replace"><![CDATA['value' => (utf8_strlen($value) > 120 ? utf8_substr($value, 0, 120) . '..' : $value),
				            'price' => ((($this->config->get('config_customer_price') && $this->customer->isLogged()) || !$this->config->get('config_customer_price')) && (float)$option['price']) ? $this->currency->format($this->tax->calculate($option['price'], $product_data['tax_class_id'], $this->config->get('config_tax') ? 'P' : false), $this->session->data['currency']) : 0,
				            'price_prefix' => isset($option['price_prefix']) ? $option['price_prefix'] : '',
							'stock_quantity' => (!empty($template->data['config']['order_products']['quantity_column']) && isset($option['quantity'])) ? $option['quantity'] : '',
							'stock_subtract' => (!empty($template->data['config']['order_products']['quantity_column']) && isset($option['subtract'])) ? $option['subtract'] : '']]></add>
	</operation>
	<operation>
		<search index="0"><![CDATA[$data['products'][] = array(]]></search>
		<add position="replace"><![CDATA[$image = $product_data['image'];

					// Product Option Image
					foreach ($order_option_query->rows as $option) {
						if ($option['image']) {
							$image = $option['image'];
						}
					}

					if ($image) {
						$image_width = isset($template->data['config']['order_products']['image_width']) ? $template->data['config']['order_products']['image_width']: 100;
						$image_height = isset($template->data['config']['order_products']['image_height']) ? $template->data['config']['order_products']['image_height']: 100;
						if ($image_width && $image_height) {
							$image = $this->model_tool_image->resize($image, $image_width, $image_height);
						}
					}

					$url = $this->url->link('product/product', 'product_id='.$product['product_id'], true);

					$data['products'][] = array(
						'product_id'       => $product_data['product_id'],
						'url'     		   => $url,
						'image'     	   => $image,
						'weight'		   => ($product_data['weight'] > 0) ? $this->weight->format($product_data['weight'], $product_data['weight_class_id']) : 0,
						'description'      => utf8_substr(strip_tags(html_entity_decode($product_data['description'], ENT_QUOTES, 'UTF-8')), 0, 200) . '..',
						'manufacturer'     => $product_data['manufacturer'],]]></add>
	</operation>
	<operation>
		<search index="0"><![CDATA[$mail->setHtml($this->load->view('mail/order', $data));]]></search>
		<add/>
	</operation>
	<operation>
		<search index="0"><![CDATA[$mail->send();]]></search>
		<add position="replace"><![CDATA[
				$template->addData($order_info);
				$template->addData($data);

				$template->data['order_comment'] = nl2br($order_info['comment']);

				$template->data['comment'] = $comment;

				if ($comment && $notify && $order_info['comment'] != $comment) {
					$template->data['instruction'] = nl2br($comment);
				}

				$template->data['order_total'] = $this->currency->format($order_info['total'], $order_info['currency_code'], $order_info['currency_value']);

				if (!empty($template->data['config']['order_products']['layout']) && file_exists($template->data['config']['template_dir'] . 'order_products/' . $template->data['config']['order_products']['layout'] . '.tpl')){
					$template->data['order_products_file'] = 'order_products/' . $template->data['config']['order_products']['layout'] . '.tpl';
				} else {
					$template->data['order_products_file'] = 'order_products/default.tpl';
				}

				$template->hook($mail);

				$mail->send();
				
				$this->model_extension_mail_template->sent();]]></add>
	</operation>
</file>