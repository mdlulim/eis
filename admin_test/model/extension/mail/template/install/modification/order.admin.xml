<file path="catalog/model/checkout/order.php" email_template="order.admin">
	<operation>
		<search index="0"><![CDATA[if (in_array('order', (array)$this->config->get('config_mail_alert'))) {]]></search>
		<add position="after"><![CDATA[					if(!empty($template->data)) {
						$other_template_data = $template->data;
					}

					$this->load->model('extension/mail/template');

					$template_load = array(
						'key' => 'order.admin'
					);

					if (!empty($order_status_id)) {
						$template_load['order_status_id'] = $order_status_id;
					}

					if (!empty($order_info['payment_method'])) {
						$template_load['payment_method'] = $order_info['payment_method'];
					}

					if (!empty($order_info['language_id'])) {
						$template_load['language_id'] = $order_info['language_id'];
					}

					$template = $this->model_extension_mail_template->load($template_load);

					// Merge Data
					foreach($other_template_data as $key => $val) {
						if (!isset($template->data[$key])) {
							$template->data[$key] = $val;
						}
					}

					$language->load('extension/mail/template');

					$template->data['text_sku'] = $language->get('text_sku');
					$template->data['text_stock_quantity'] = $language->get('text_stock_quantity');
					$template->data['text_backorder_quantity'] = $language->get('text_backorder_quantity');
		
					$template->data['order_link'] = (defined('HTTP_ADMIN') ? HTTP_ADMIN : HTTPS_SERVER.'admin/') . 'index.php?route=' . rawurlencode('sale/order/info') . '&order_id=' . $order_id;

					if (!empty($order_info['weight'])) {
						$template->data['order_weight'] = $this->weight->format($order_info['weight'], $this->config->get('config_weight_class_id'), $this->language->get('decimal_point'), $this->language->get('thousand_point'));
					}]]></add>
	</operation>
	<operation info="Duplicate from order.customer" error="skip">
		<search index="0"><![CDATA[$order_option_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "order_option WHERE order_id = '" . (int)$order_id . "' AND order_product_id = '" . (int)$product['order_product_id'] . "'");]]></search>
		<ignoreif><![CDATA[$order_option_query = $this->db->query("SELECT oo.*, pov.* FROM " . DB_PREFIX . "order_option oo LEFT JOIN " . DB_PREFIX . "product_option_value pov ON (pov.product_option_value_id = oo.product_option_value_id) WHERE oo.order_id = '" . (int)$order_id . "' AND oo.order_product_id = '" . (int)$product['order_product_id'] . "'");]]></ignoreif>
		<add position="replace"><![CDATA[$product_data = $this->model_catalog_product->getProduct($product['product_id']);

		$order_option_query = $this->db->query("SELECT oo.*, pov.*, ov.image FROM " . DB_PREFIX . "order_option oo LEFT JOIN " . DB_PREFIX . "product_option_value pov ON (pov.product_option_value_id = oo.product_option_value_id) LEFT JOIN " . DB_PREFIX . "option_value ov ON (ov.option_value_id = pov.option_value_id) WHERE oo.order_id = '" . (int)$order_id . "' AND oo.order_product_id = '" . (int)$product['order_product_id'] . "'");]]></add>
	</operation>
	<operation info="Duplicate from order.customer" error="skip">
		<search index="0"><![CDATA['value' => (utf8_strlen($value) > 20 ? utf8_substr($value, 0, 20) . '..' : $value)]]></search>
		<ignoreif><![CDATA['value' => (utf8_strlen($value) > 120 ? utf8_substr($value, 0, 120) . '..' : $value),]]></ignoreif>
		<add position="replace"><![CDATA['value' => (utf8_strlen($value) > 120 ? utf8_substr($value, 0, 120) . '..' : $value),
				            'price' => ((($this->config->get('config_customer_price') && $this->customer->isLogged()) || !$this->config->get('config_customer_price')) && (float)$option['price']) ? $this->currency->format($this->tax->calculate($option['price'], $product_data['tax_class_id'], $this->config->get('config_tax') ? 'P' : false), $this->session->data['currency']) : 0,
				            'price_prefix' => isset($option['price_prefix']) ? $option['price_prefix'] : '',
							'stock_quantity' => (!empty($template->data['config']['order_products']['quantity_column']) && isset($option['quantity'])) ? $option['quantity'] : '',
							'stock_subtract' => (!empty($template->data['config']['order_products']['quantity_column']) && isset($option['subtract'])) ? $option['subtract'] : '']]></add>
	</operation>
	<operation>
		<search index="0"><![CDATA[$data['products'][] = array(]]></search>
		<add position="replace"><![CDATA[if (!empty($template->data['config']['order_products']['quantity_column'])) {
						if ($product_data['subtract']) {
							$stock_quantity = $product_data['quantity'] + $product['quantity']; // quantity before order
						} else {
							$stock_quantity = false;
						}

						if ($stock_quantity && $product['quantity'] > $stock_quantity) {
							$stock_backorder = $product['quantity'] - $stock_quantity;
						} else {
							$stock_backorder = false;
						}
					}

					$data['products'][] = array(
						'sku'              => $product_data['sku'],
						'stock_status'     => $product_data['stock_status'],
						'stock_subtract'   => $product_data['subtract'],
						'stock_quantity'   => $stock_quantity,
						'stock_backorder'  => $stock_backorder,]]></add>
	</operation>
	<operation>
		<search index="0"><![CDATA[$mail->setHtml($this->load->view('mail/order', $data));]]></search>
		<add/>
	</operation>
	<operation>
		<search index="1"><![CDATA[$mail->send();]]></search>
		<add position="replace"><![CDATA[$template->build();

					$template->hook($mail);

					if ($template->data['emailtemplate']['attach_invoice']) {
						if (!$this->config->get('pdf_invoice')) {
							trigger_error('Error: could not attach invoice! Install module \'opencart pdf order invoice\'');
						} else {
				    		$this->load->model('extension/module/pdf_invoice');

				    		$pdf_invoice = $this->model_extension_module_pdf_invoice->getInvoice($order_info, true);

				    		if ($pdf_invoice && file_exists($pdf_invoice)) {
				    			$template->data['emailtemplate_invoice_pdf'] = $pdf_invoice;

				    			$mail->addAttachment($pdf_invoice);
				    		}
				    	}
			    	}

					$mail->send();
					
					$this->model_extension_mail_template->sent();]]></add>
	</operation>
</file>